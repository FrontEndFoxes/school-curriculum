---
import Layout from "../../layouts/Layout.astro";
import { curricula } from "../../i18n/translations";

export function getStaticPaths() {
  return [
    { params: { lang: "en" } },
    { params: { lang: "hi" } },
    { params: { lang: "id" } },
    { params: { lang: "it" } },
    { params: { lang: "ja" } },
    { params: { lang: "ko" } },
    { params: { lang: "ptbr" } },
    { params: { lang: "ar" } },
    { params: { lang: "zhcn" } },
    { params: { lang: "bn" } },
  ];
}

const { lang } = Astro.params;

// Dynamically import quiz data for all curricula in the current language
const quizData = await Promise.all(
  curricula.map(async (curriculum) => {
    try {
      const data = await import(`../../i18n/${curriculum}/${lang}.json`);
      return { id: curriculum, title: data.title };
    } catch (error) {
      console.error(`Error loading data for ${curriculum} in ${lang}:`, error);
      return {
        id: curriculum,
        title: "Sorry, this curriculum has not yet been translated!",
      };
    }
  })
);
---

<Layout title="Quizzes" lang={lang}>
  <div>
    <div class="curriculum-cards">
      {
        quizData.map((curriculum) =>
          curriculum.title ===
          "Sorry, this curriculum has not yet been translated!" ? (
            <div class="card untranslated">
              <h3>{curriculum.title}</h3>
            </div>
          ) : (
            <a href={`/${lang}/${curriculum.id}`} class="card">
              <h3>{curriculum.title}</h3>
            </a>
          )
        )
      }
    </div>
  </div>
</Layout>

<style>
  .curriculum-cards {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .card {
    display: block;
    padding: 1.5rem;
    width: 250px;
    height: 150px;
    border-radius: 12px;
    text-align: center;
    text-decoration: none;
    color: #fff;
    background: linear-gradient(135deg, #6a11cb, #2575fc);
    box-shadow:
      0 4px 6px rgba(0, 0, 0, 0.1),
      0 1px 3px rgba(0, 0, 0, 0.06);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .card h3 {
    font-size: 1.25rem;
    font-weight: bold;
    margin: 0;
  }

  .card:hover {
    transform: translateY(-8px);
    box-shadow:
      0 10px 15px rgba(0, 0, 0, 0.2),
      0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .card:active {
    transform: translateY(0);
    box-shadow:
      0 4px 6px rgba(0, 0, 0, 0.1),
      0 1px 3px rgba(0, 0, 0, 0.06);
  }

  /* Styles for untranslated cards */
  .card.untranslated {
    background: #fff;
    color: #0070f3;
    cursor: not-allowed;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .card.untranslated h3 {
    color: #0070f3;
  }

  .card.untranslated:hover {
    transform: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
</style>
